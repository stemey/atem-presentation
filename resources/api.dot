digraph G {
	rankdir=BT;
        fontname = "Bitstream Vera Sans";
splines=true;
nodesep=1.3;
size="11,7";
ratio=fill;

        node [
                shape = "record"
        fontsize = 16;
        ]

        edge [
	]

        EntityType [
                label = "{EntityType\l|+ code : string\l|+ getReturnType() : Class\l| + getService() : Object\l}",id=EntityType
        ]
        Type [
                label = "{Type\l| + getJavaType() : Class\l}",id=Type
        ]
       PrimitiveType [
                label = "{PrimitiveType\l| + getJavaType() : Class\l}",id=PrimitiveType
        ]
        EntityTypeRepository [
                label = "{EntityTypeRepository\l}",id=EntityTypeRepository
            ]
        Attribute [
                label = "{Attribute\l|+ code : string\l|+ setValue(entity,value)\l|+ getValue(entity) : Object\l}",id=Attribute
            ]
 	MapAttribute [ label="{MapAttribute\l| + putElement(entity, key, value) : void\l| + getElement(entity, key) : Object\l| + getSize(entity) : int\l}"],id=MapAttribute
 	CollectionAttribute [ label="{CollectionAttribute\l| + addElement(entity, value) : void\l| + getSize(entity) : int\l}"],id=CollectionAttribute
	    

		EntityTypeRepository -> EntityType [label="getEntityType(String code)"];
		EntityType -> Type [weight=0];
		PrimitiveType
 -> Type [weight=0];
		EntityType -> EntityType [constraint=false,label="superType/\nsubTypes"];
		EntityType -> Attribute [label="0..n",decorate];
		Attribute -> Type [label="targetType",decorate,labeldistance=2,labelangle=1.2];
		Attribute -> CollectionAttribute [dir=back];
		Attribute -> MapAttribute [dir=back];
		MapAttribute -> Type [label="getKeyType()"]
}
