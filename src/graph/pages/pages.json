[ {
	type : "graph.HtmlPage",
	snippet : "welcome.html"
}, {
	type : "graph.AgendaPage",
	snippet:"agenda.html",
	index : 0
}, {
	type : "graph.AgendaPage",
	snippet:"agenda.html",
	index : 1
}, {
	type : "graph.HtmlPage",
	snippet : "introduction.html"
}, {
	type : "graph.HtmlPage",
	snippet : "requirement.html"
}, {
	type : "graph.GraphPage",
	graph : "compare.json",
	matrix : 1.34,
	subChain : {
		type : "graph.InstructionsChain",
		views : [ {
			type : "graph.Instruction",
			text : "include primitive attributes",
			ref : "Person",
			x : 100,
			y : 300,
			height : 100,
			width : 800,
			refAttributes : [ 2,3 ]
		},{
			type : "graph.Instruction",
			text : "Date should be handled as a primitive type",
			ref : "Person",
			x : 0,
			y : 300,
			height : 100,
			width : 1100,
			refAttributes : [ 3 ]
		}, {
			type : "graph.Instruction",
			text : "include and cascade association",
			ref : "Insurance",
			refAttributes:[2,3],
			x : 100,
			y : 500,
			width : 850,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "include collection attribute",
			ref : "Pet",
			x : 150,
			y : 500,
			width : 750,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "validate attributes!",
			ref : "Pet",
			x : 200,
			y : 500,
			width : 600,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "include attribute in subtype",
			ref : "Dog",
			refAttributes : [ 1 ],
			x : 100,
			y : 250,
			width : 800,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Identity of entities important",
			ref : "Pet",
			x : 150,
			y : 400,
			width : 800,
			height : 100
		} ]
	}
}, {
	type : "graph.HtmlPage",
	snippet : "better-api.html"
}, {
	type : "graph.HtmlPage",
	snippet : "better-api-2.html"
}, {
	type : "graph.AgendaPage",
	snippet:"agenda.html",
	index : 2
} , {
	type : "graph.GraphPage",
	graph : "api.json",
	matrix : 1.0,
	subChain : {
		type : "graph.InstructionsChain",
		views : [ {
			type : "graph.Instruction",
			text : "EntityTypeRepository provides access to types",
			ref : "EntityTypeRepository",
			x : 100,
			y : 200,
			height : 100,
			width : 1000
		}, {
			type : "graph.Instruction",
			text : "Types are PrimitiveType and EntityType",
			ref : "Type",
			x : 100,
			y : 200,
			width : 1000,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "EntityType is analogous to java.lang.Class",
			ref : "EntityType",
			x : 100,
			y : 200,
			width : 1000,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Access to known subtypes",
			ref : "EntityType",
			x : 200,
			y : 200,
			width : 800,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Attribute has a targetType and a returnClass",
			ref : "Attribute",
			x : 100,
			y : 500,
			width : 1000,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Special APIs for map and collection",
			ref : "MapAttribute",
			x : 100,
			y : 400,
			width : 900,
			height : 100
		} ]
	}
}, {
	type : "graph.SourcePage",
	title:"Extensibility with Services",
	snippet : "services.txt"
}, {
	type : "graph.SourcePage",
	title:"Java metadata",
	snippet : "javametadata.txt"
}, {
	type : "graph.SourcePage",
	title:"Atem Metadata",
	snippet : "metadata.txt"
}, {
	type : "graph.AgendaPage",
	snippet:"agenda.html",
	index : 3
}, {
	type : "graph.HtmlPage",
	snippet : "comparison.html"
}, {
	type : "graph.GraphPage",
	graph : "comparison.json",
	matrix : 1.27,
	subChain : {
		type : "graph.InstructionsChain",
		views : [ {
			type : "graph.Instruction",
			text : "Calculating difference between two entities ",
			ref : "Difference",
			x : 100,
			y : 200,
			height : 100,
			width : 900
		}, {
			type : "graph.Instruction",
			text : "Difference includes path: 'person.pets.0.walksPerDay' ",
			ref : "Difference",
			x : -25,
			y : 200,
			height : 100,
			width : 1150
		}, {
			type : "graph.Instruction",
			text : "AttributeChanges include old and new values",
			ref : "AttributeChange",
			x : 50,
			y : 200,
			width : 1000,
			height : 100
		},  {
			type : "graph.Instruction",
			text : "The removal includes the path and the value.",
			ref : "Removal",
			x : 50,
			y : 200,
			width : 1000,
			height : 100
		},  {
			type : "graph.Instruction",
			text : "The addition includes the path and the value.",
			ref : "Addition",
			x : 50,
			y : 200,
			width : 1000,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Rearrangement of elements in an ordered collection.",
			ref : "Rearrangement",
			x : 0,
			y : 200,
			width : 1100,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "The identity is important",
			ref : "Rearrangement",
			x : 150,
			y : 200,
			width : 700,
			height : 100
		}, {
			type : "graph.Instruction",
			text : "Use IdentityService or only include the id attribute",
			ref : "Rearrangement",
			x : 0,
			y : 200,
			width : 1100,
			height : 100
		} ]
	}
}, {
	type : "graph.SourcePage",
	title:"Comparison",
	snippet : "comparison.txt"
}, {
	type : "graph.HtmlPage",
	snippet : "transformation.html"
}, {
	type : "graph.GraphPage",
	graph : "transformation.json",
	matrix : 1.34,
	subChain : {
		type : "graph.InstructionsChain",
		views : [ {
			type : "graph.Instruction",
			text : "transform Person into Petlover.",
			x : 50,
			y : 300,
			height : 100,
			width : 1000
		}, {
			type : "graph.Instruction",
			text : "copy name",
			x : 100,
			y : 300,
			height : 100,
			width : 800
		},{
			type : "graph.Instruction",
			text : "copy 'insurance.price' to 'insurancePrice'",
			x : 100,
			y : 300,
			height : 100,
			width : 700
		},{
			type : "graph.Instruction",
			text : "calculate petCount",
			x : 100,
			y : 300,
			height : 100,
			width : 800
		}]}
}, {
	type : "graph.SourcePage",
	title:"Creating a transformation",
	snippet : "create-transformation.txt"
}, {
	type : "graph.SourcePage",
	title:"Applying a transformation",
	snippet : "apply-transformation.txt"
}, {
	type : "graph.AgendaPage",
	snippet:"agenda.html",
	index : 4
}, {
	type : "graph.HtmlPage",
	snippet : "applications.html"
} ]
